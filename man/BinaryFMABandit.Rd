% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bandit_binary_fma.R
\name{BinaryFMABandit}
\alias{BinaryFMABandit}
\title{R6 Class handling a set of binary stochastic arms}
\description{
A \code{\link{BinaryFMABandit}} object holds a set of of binary
  arms represented by their mean and generated reward matrix. It provides
  methods to run policies against these arms.
}
\details{
A BinaryFMABandit object is instantiated using the horizon and the
  means of each arms.  Additional arms can be provided afterward using
  \code{\link{add_bernouilli_arm}}.

  Policies can be simulated against the arms using
  \code{\link{run_ucb_policy}} or \code{\link{run_ts_policy}}.

  Plot of cumulative regret can be generated using \code{\link{plot_regret}}
}
\examples{
bandit <- BinaryFMABandit$new(horizon=1000L, arms_means=c(0.2,0.5))
ucbres <- bandit$run_ucb_policy(alpha=c(1,10),verbose=TRUE)
tsres <- bandit$run_ts_policy(verbose=TRUE)
bandit$plot_regret(ucb_res[[1]]$result)
}
\section{Super class}{
\code{\link[gamblr:FMABandit]{gamblr::FMABandit}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{BinaryFMABandit$new()}}
\item \href{#method-add_arm}{\code{BinaryFMABandit$add_arm()}}
\item \href{#method-add_bernouilli_arm}{\code{BinaryFMABandit$add_bernouilli_arm()}}
\item \href{#method-reset_rewards}{\code{BinaryFMABandit$reset_rewards()}}
\item \href{#method-run_exp3_policy}{\code{BinaryFMABandit$run_exp3_policy()}}
\item \href{#method-run_ts_policy}{\code{BinaryFMABandit$run_ts_policy()}}
\item \href{#method-clone}{\code{BinaryFMABandit$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="gamblr" data-topic="FMABandit" data-id="plot_regret">}\href{../../gamblr/html/FMABandit.html#method-plot_regret}{\code{gamblr::FMABandit$plot_regret()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="gamblr" data-topic="FMABandit" data-id="run_eps_greedy_policy">}\href{../../gamblr/html/FMABandit.html#method-run_eps_greedy_policy}{\code{gamblr::FMABandit$run_eps_greedy_policy()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="gamblr" data-topic="FMABandit" data-id="run_ucb_policy">}\href{../../gamblr/html/FMABandit.html#method-run_ucb_policy}{\code{gamblr::FMABandit$run_ucb_policy()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new BinaryFMABandit object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryFMABandit$new(horizon, arms_means)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{horizon}}{Number of time steps. Determines height of reward matrix.}

\item{\code{arms_means}}{Vector specifying the arms means.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `BinaryFMABandit` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_arm"></a>}}
\if{latex}{\out{\hypertarget{method-add_arm}{}}}
\subsection{Method \code{add_arm()}}{
Adds an arm using its reward vector.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryFMABandit$add_arm(R)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{R}}{Rewards vector.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_bernouilli_arm"></a>}}
\if{latex}{\out{\hypertarget{method-add_bernouilli_arm}{}}}
\subsection{Method \code{add_bernouilli_arm()}}{
Adds a binary arm according to a bernouilli distribution.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryFMABandit$add_bernouilli_arm(p)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{p}}{Mean of bernouilli distribution.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-reset_rewards"></a>}}
\if{latex}{\out{\hypertarget{method-reset_rewards}{}}}
\subsection{Method \code{reset_rewards()}}{
Re-generate reward matrix according to the existing means.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryFMABandit$reset_rewards()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-run_exp3_policy"></a>}}
\if{latex}{\out{\hypertarget{method-run_exp3_policy}{}}}
\subsection{Method \code{run_exp3_policy()}}{
Runs a set of Exp3 policies against the arms.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryFMABandit$run_exp3_policy(eta = 0.05, verbose = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eta}}{Numeric vector specifying exp3 policies parameters.}

\item{\code{verbose}}{Boolean specifying the verbose mode of simulation.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of simulation result. An item of this list consist of a
  policy name, the result of the simulation of that policy and the system
  time the simulation took.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-run_ts_policy"></a>}}
\if{latex}{\out{\hypertarget{method-run_ts_policy}{}}}
\subsection{Method \code{run_ts_policy()}}{
Runs a Thompson Sampling policy against the arms.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryFMABandit$run_ts_policy(verbose = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{Boolean specifying the verbose mode of simulation.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing the policy name, the result of the simulation
  and the system time the simulation took.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryFMABandit$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
